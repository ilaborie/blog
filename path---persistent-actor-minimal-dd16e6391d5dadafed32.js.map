{"version":3,"sources":["webpack:///path---persistent-actor-minimal-dd16e6391d5dadafed32.js","webpack:///./.cache/json/persistent-actor-minimal.json"],"names":["webpackJsonp","500","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,0BAAAC,OAAA,mBAA6DC,gBAAmBC,GAAA,gGAAAC,KAAA,68LAA8hGC,aAA6oGL,MAAA,kCAAAM,KAAA,sBAAsEC,aAAgBC,KAAA","file":"path---persistent-actor-minimal-dd16e6391d5dadafed32.js","sourcesContent":["webpackJsonp([90106736999892],{\n\n/***/ 500:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Akka, Concurrency, etc.\",\"author\":\"Richard Imaoka\"}},\"markdownRemark\":{\"id\":\"C:/Users/nishyu/blog/src/pages/persistent-actor-minimal.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2>Overview</h2>\\n<p>You can find the code and instruction to run the example at <a href=\\\"https://github.com/richardimaoka/resources/tree/master/persistent-actor-minimal\\\">GitHub</a>.</p>\\n<h3>receiveCommand</h3>\\n<div>\\n          <div\\n            class=\\\"gatsby-resp-iframe-wrapper\\\"\\n            style=\\\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\\\"\\n          >\\n            <iframe \\\"=\\\"\\\" src=\\\"https://www.youtube.com/embed/Jt9xDvYMNMc\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen style=\\\"\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n          \\\"></iframe>\\n          </div>\\n          </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-scala\\\"><code>  <span class=\\\"token keyword\\\">override</span> <span class=\\\"token keyword\\\">def</span> receiveCommand<span class=\\\"token operator\\\">:</span> Receive <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> Command<span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span> ⇒\\n      persist<span class=\\\"token punctuation\\\">(</span>Event<span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> event ⇒\\n        sum <span class=\\\"token operator\\\">+=</span> i\\n      <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Persistence actor receives a <code>Command</code> and generate an <code>Event</code>, then persist the <code>Event</code> via <code>Journal</code>. The <code>receiveCommand</code> method of <code>PersistentActor</code> does that.</p>\\n<h3>receiveRecover</h3>\\n<div>\\n          <div\\n            class=\\\"gatsby-resp-iframe-wrapper\\\"\\n            style=\\\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\\\"\\n          >\\n            <iframe src=\\\"https://www.youtube.com/embed/xfsF0u0s3e4\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen style=\\\"\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n          \\\"></iframe>\\n          </div>\\n          </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-scala\\\"><code>  <span class=\\\"token keyword\\\">override</span> <span class=\\\"token keyword\\\">def</span> receiveRecover<span class=\\\"token operator\\\">:</span> Receive <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> Event<span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span> ⇒\\n      sum <span class=\\\"token operator\\\">+=</span> i\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p><code>receiveRecover</code> is called upon restarting a <code>PersistentActor</code> after exception was thrown.</p>\\n<h2>Instruction to run the example</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>> git clone https://github.com/richardimaoka/resources.git\\n> cd resources\\n> cd persistent-actor-minimal\\n> sbt\\n> runMain example.Main</code></pre>\\n      </div>\\n<h2>Output</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>[info] Running example.Main\\nreceiveCommand  : Received Command Command(1)\\npersist callback: Event = Event(1) persisted\\npersist callback: current state = 1\\nreceiveCommand  : Received Command Command(2)\\npersist callback: Event = Event(2) persisted\\npersist callback: current state = 3\\nreceiveCommand  : Received Command Command(3)\\npersist callback: Event = Event(3) persisted\\npersist callback: current state = 6\\n[ERROR] [01/13/2018 17:24:19.422] [exampleSystem-akka.actor.default-dispatcher-7] [akka://exampleSystem/user/p1] exploded!\\njava.lang.Exception: exploded!\\n        at example.MyPersistentActor$$anonfun$receiveCommand$1.applyOrElse(Main.scala:37)\\n        at akka.actor.Actor.aroundReceive(Actor.scala:517)\\n        at akka.actor.Actor.aroundReceive$(Actor.scala:515)\\n        at example.MyPersistentActor.akka$persistence$Eventsourced$$super$aroundReceive(Main.scala:11)\\n        at akka.persistence.Eventsourced$$anon$1.stateReceive(Eventsourced.scala:663)\\n        at akka.persistence.Eventsourced.aroundReceive(Eventsourced.scala:183)\\n        at akka.persistence.Eventsourced.aroundReceive$(Eventsourced.scala:182)\\n        at example.MyPersistentActor.aroundReceive(Main.scala:11)\\n        at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527)\\n        at akka.actor.ActorCell.invoke(ActorCell.scala:496)\\n        at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257)\\n        at akka.dispatch.Mailbox.run(Mailbox.scala:224)\\n        at akka.dispatch.Mailbox.exec(Mailbox.scala:234)\\n        at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)\\n        at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)\\n        at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)\\n        at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)\\n\\nreceiveRecover  : Recovering an event = Event(1)\\nreceiveRecover  : current state = 1\\nreceiveRecover  : Recovering an event = Event(2)\\nreceiveRecover  : current state = 3\\nreceiveRecover  : Recovering an event = Event(3)\\nreceiveRecover  : current state = 6\\nreceiveCommand  : Received Command Command(4)\\npersist callback: Event = Event(4) persisted\\npersist callback: current state = 10\\nreceiveCommand  : Received Command Command(5)\\npersist callback: Event = Event(5) persisted\\npersist callback: current state = 15\\n[success] Total time: 2 s, completed Jan 13, 2018 5:24:20 PM</code></pre>\\n      </div>\\n<h2>References</h2>\\n<ul>\\n<li>Official documentation at <a href=\\\"https://doc.akka.io/docs/akka/2.5.9/persistence.html\\\">https://doc.akka.io/docs/akka/2.5.9/persistence.html</a></li>\\n</ul>\",\"frontmatter\":{\"title\":\"PersistentActor minimal example\",\"date\":\"January 13, 2018\"}}},\"pathContext\":{\"slug\":\"/persistent-actor-minimal/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---persistent-actor-minimal-dd16e6391d5dadafed32.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Akka, Concurrency, etc.\",\"author\":\"Richard Imaoka\"}},\"markdownRemark\":{\"id\":\"C:/Users/nishyu/blog/src/pages/persistent-actor-minimal.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2>Overview</h2>\\n<p>You can find the code and instruction to run the example at <a href=\\\"https://github.com/richardimaoka/resources/tree/master/persistent-actor-minimal\\\">GitHub</a>.</p>\\n<h3>receiveCommand</h3>\\n<div>\\n          <div\\n            class=\\\"gatsby-resp-iframe-wrapper\\\"\\n            style=\\\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\\\"\\n          >\\n            <iframe \\\"=\\\"\\\" src=\\\"https://www.youtube.com/embed/Jt9xDvYMNMc\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen style=\\\"\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n          \\\"></iframe>\\n          </div>\\n          </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-scala\\\"><code>  <span class=\\\"token keyword\\\">override</span> <span class=\\\"token keyword\\\">def</span> receiveCommand<span class=\\\"token operator\\\">:</span> Receive <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> Command<span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span> ⇒\\n      persist<span class=\\\"token punctuation\\\">(</span>Event<span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> event ⇒\\n        sum <span class=\\\"token operator\\\">+=</span> i\\n      <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Persistence actor receives a <code>Command</code> and generate an <code>Event</code>, then persist the <code>Event</code> via <code>Journal</code>. The <code>receiveCommand</code> method of <code>PersistentActor</code> does that.</p>\\n<h3>receiveRecover</h3>\\n<div>\\n          <div\\n            class=\\\"gatsby-resp-iframe-wrapper\\\"\\n            style=\\\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\\\"\\n          >\\n            <iframe src=\\\"https://www.youtube.com/embed/xfsF0u0s3e4\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen style=\\\"\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n          \\\"></iframe>\\n          </div>\\n          </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-scala\\\"><code>  <span class=\\\"token keyword\\\">override</span> <span class=\\\"token keyword\\\">def</span> receiveRecover<span class=\\\"token operator\\\">:</span> Receive <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> Event<span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span> ⇒\\n      sum <span class=\\\"token operator\\\">+=</span> i\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p><code>receiveRecover</code> is called upon restarting a <code>PersistentActor</code> after exception was thrown.</p>\\n<h2>Instruction to run the example</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>> git clone https://github.com/richardimaoka/resources.git\\n> cd resources\\n> cd persistent-actor-minimal\\n> sbt\\n> runMain example.Main</code></pre>\\n      </div>\\n<h2>Output</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>[info] Running example.Main\\nreceiveCommand  : Received Command Command(1)\\npersist callback: Event = Event(1) persisted\\npersist callback: current state = 1\\nreceiveCommand  : Received Command Command(2)\\npersist callback: Event = Event(2) persisted\\npersist callback: current state = 3\\nreceiveCommand  : Received Command Command(3)\\npersist callback: Event = Event(3) persisted\\npersist callback: current state = 6\\n[ERROR] [01/13/2018 17:24:19.422] [exampleSystem-akka.actor.default-dispatcher-7] [akka://exampleSystem/user/p1] exploded!\\njava.lang.Exception: exploded!\\n        at example.MyPersistentActor$$anonfun$receiveCommand$1.applyOrElse(Main.scala:37)\\n        at akka.actor.Actor.aroundReceive(Actor.scala:517)\\n        at akka.actor.Actor.aroundReceive$(Actor.scala:515)\\n        at example.MyPersistentActor.akka$persistence$Eventsourced$$super$aroundReceive(Main.scala:11)\\n        at akka.persistence.Eventsourced$$anon$1.stateReceive(Eventsourced.scala:663)\\n        at akka.persistence.Eventsourced.aroundReceive(Eventsourced.scala:183)\\n        at akka.persistence.Eventsourced.aroundReceive$(Eventsourced.scala:182)\\n        at example.MyPersistentActor.aroundReceive(Main.scala:11)\\n        at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527)\\n        at akka.actor.ActorCell.invoke(ActorCell.scala:496)\\n        at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257)\\n        at akka.dispatch.Mailbox.run(Mailbox.scala:224)\\n        at akka.dispatch.Mailbox.exec(Mailbox.scala:234)\\n        at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)\\n        at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)\\n        at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)\\n        at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)\\n\\nreceiveRecover  : Recovering an event = Event(1)\\nreceiveRecover  : current state = 1\\nreceiveRecover  : Recovering an event = Event(2)\\nreceiveRecover  : current state = 3\\nreceiveRecover  : Recovering an event = Event(3)\\nreceiveRecover  : current state = 6\\nreceiveCommand  : Received Command Command(4)\\npersist callback: Event = Event(4) persisted\\npersist callback: current state = 10\\nreceiveCommand  : Received Command Command(5)\\npersist callback: Event = Event(5) persisted\\npersist callback: current state = 15\\n[success] Total time: 2 s, completed Jan 13, 2018 5:24:20 PM</code></pre>\\n      </div>\\n<h2>References</h2>\\n<ul>\\n<li>Official documentation at <a href=\\\"https://doc.akka.io/docs/akka/2.5.9/persistence.html\\\">https://doc.akka.io/docs/akka/2.5.9/persistence.html</a></li>\\n</ul>\",\"frontmatter\":{\"title\":\"PersistentActor minimal example\",\"date\":\"January 13, 2018\"}}},\"pathContext\":{\"slug\":\"/persistent-actor-minimal/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/persistent-actor-minimal.json\n// module id = 500\n// module chunks = 90106736999892"],"sourceRoot":""}